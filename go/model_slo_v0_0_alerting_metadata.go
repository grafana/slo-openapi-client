/*
Grafana SLO API

This API CRUDs SLO objects for the Grafana plugin.  Modifying an SLO object will create or update recording and alerting rules in a connected Prometheus instance and create or update dashboards in Grafana.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
)

// checks if the SloV00AlertingMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloV00AlertingMetadata{}

// SloV00AlertingMetadata struct for SloV00AlertingMetadata
type SloV00AlertingMetadata struct {
	Annotations []SloV00Label `json:"annotations,omitempty"`
	Labels      []SloV00Label `json:"labels,omitempty"`
}

// NewSloV00AlertingMetadata instantiates a new SloV00AlertingMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloV00AlertingMetadata() *SloV00AlertingMetadata {
	this := SloV00AlertingMetadata{}
	return &this
}

// NewSloV00AlertingMetadataWithDefaults instantiates a new SloV00AlertingMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloV00AlertingMetadataWithDefaults() *SloV00AlertingMetadata {
	this := SloV00AlertingMetadata{}
	return &this
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *SloV00AlertingMetadata) GetAnnotations() []SloV00Label {
	if o == nil || IsNil(o.Annotations) {
		var ret []SloV00Label
		return ret
	}
	return o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloV00AlertingMetadata) GetAnnotationsOk() ([]SloV00Label, bool) {
	if o == nil || IsNil(o.Annotations) {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *SloV00AlertingMetadata) HasAnnotations() bool {
	if o != nil && !IsNil(o.Annotations) {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given []SloV00Label and assigns it to the Annotations field.
func (o *SloV00AlertingMetadata) SetAnnotations(v []SloV00Label) {
	o.Annotations = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *SloV00AlertingMetadata) GetLabels() []SloV00Label {
	if o == nil || IsNil(o.Labels) {
		var ret []SloV00Label
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloV00AlertingMetadata) GetLabelsOk() ([]SloV00Label, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *SloV00AlertingMetadata) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []SloV00Label and assigns it to the Labels field.
func (o *SloV00AlertingMetadata) SetLabels(v []SloV00Label) {
	o.Labels = v
}

func (o SloV00AlertingMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloV00AlertingMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Annotations) {
		toSerialize["annotations"] = o.Annotations
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	return toSerialize, nil
}

type NullableSloV00AlertingMetadata struct {
	value *SloV00AlertingMetadata
	isSet bool
}

func (v NullableSloV00AlertingMetadata) Get() *SloV00AlertingMetadata {
	return v.value
}

func (v *NullableSloV00AlertingMetadata) Set(val *SloV00AlertingMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableSloV00AlertingMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableSloV00AlertingMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloV00AlertingMetadata(val *SloV00AlertingMetadata) *NullableSloV00AlertingMetadata {
	return &NullableSloV00AlertingMetadata{value: val, isSet: true}
}

func (v NullableSloV00AlertingMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloV00AlertingMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
