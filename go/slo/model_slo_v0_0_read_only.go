/*
Grafana SLO API

This API CRUDs SLO objects for the Grafana plugin.  Modifying an SLO object will create or update recording and alerting rules in a connected Prometheus instance and create or update dashboards in Grafana.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
)

// checks if the SloV00ReadOnly type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloV00ReadOnly{}

// SloV00ReadOnly struct for SloV00ReadOnly
type SloV00ReadOnly struct {
	AllowedActions        []string                     `json:"allowedActions,omitempty"`
	DrillDownDashboardRef *SloV00DashboardRef          `json:"drillDownDashboardRef,omitempty"`
	Provenance            *string                      `json:"provenance,omitempty"`
	SourceDatasource      *SloV00DestinationDatasource `json:"sourceDatasource,omitempty"`
	Status                *SloV00Status                `json:"status,omitempty"`
}

// NewSloV00ReadOnly instantiates a new SloV00ReadOnly object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloV00ReadOnly() *SloV00ReadOnly {
	this := SloV00ReadOnly{}
	return &this
}

// NewSloV00ReadOnlyWithDefaults instantiates a new SloV00ReadOnly object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloV00ReadOnlyWithDefaults() *SloV00ReadOnly {
	this := SloV00ReadOnly{}
	return &this
}

// GetAllowedActions returns the AllowedActions field value if set, zero value otherwise.
func (o *SloV00ReadOnly) GetAllowedActions() []string {
	if o == nil || IsNil(o.AllowedActions) {
		var ret []string
		return ret
	}
	return o.AllowedActions
}

// GetAllowedActionsOk returns a tuple with the AllowedActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloV00ReadOnly) GetAllowedActionsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedActions) {
		return nil, false
	}
	return o.AllowedActions, true
}

// HasAllowedActions returns a boolean if a field has been set.
func (o *SloV00ReadOnly) HasAllowedActions() bool {
	if o != nil && !IsNil(o.AllowedActions) {
		return true
	}

	return false
}

// SetAllowedActions gets a reference to the given []string and assigns it to the AllowedActions field.
func (o *SloV00ReadOnly) SetAllowedActions(v []string) {
	o.AllowedActions = v
}

// GetDrillDownDashboardRef returns the DrillDownDashboardRef field value if set, zero value otherwise.
func (o *SloV00ReadOnly) GetDrillDownDashboardRef() SloV00DashboardRef {
	if o == nil || IsNil(o.DrillDownDashboardRef) {
		var ret SloV00DashboardRef
		return ret
	}
	return *o.DrillDownDashboardRef
}

// GetDrillDownDashboardRefOk returns a tuple with the DrillDownDashboardRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloV00ReadOnly) GetDrillDownDashboardRefOk() (*SloV00DashboardRef, bool) {
	if o == nil || IsNil(o.DrillDownDashboardRef) {
		return nil, false
	}
	return o.DrillDownDashboardRef, true
}

// HasDrillDownDashboardRef returns a boolean if a field has been set.
func (o *SloV00ReadOnly) HasDrillDownDashboardRef() bool {
	if o != nil && !IsNil(o.DrillDownDashboardRef) {
		return true
	}

	return false
}

// SetDrillDownDashboardRef gets a reference to the given SloV00DashboardRef and assigns it to the DrillDownDashboardRef field.
func (o *SloV00ReadOnly) SetDrillDownDashboardRef(v SloV00DashboardRef) {
	o.DrillDownDashboardRef = &v
}

// GetProvenance returns the Provenance field value if set, zero value otherwise.
func (o *SloV00ReadOnly) GetProvenance() string {
	if o == nil || IsNil(o.Provenance) {
		var ret string
		return ret
	}
	return *o.Provenance
}

// GetProvenanceOk returns a tuple with the Provenance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloV00ReadOnly) GetProvenanceOk() (*string, bool) {
	if o == nil || IsNil(o.Provenance) {
		return nil, false
	}
	return o.Provenance, true
}

// HasProvenance returns a boolean if a field has been set.
func (o *SloV00ReadOnly) HasProvenance() bool {
	if o != nil && !IsNil(o.Provenance) {
		return true
	}

	return false
}

// SetProvenance gets a reference to the given string and assigns it to the Provenance field.
func (o *SloV00ReadOnly) SetProvenance(v string) {
	o.Provenance = &v
}

// GetSourceDatasource returns the SourceDatasource field value if set, zero value otherwise.
func (o *SloV00ReadOnly) GetSourceDatasource() SloV00DestinationDatasource {
	if o == nil || IsNil(o.SourceDatasource) {
		var ret SloV00DestinationDatasource
		return ret
	}
	return *o.SourceDatasource
}

// GetSourceDatasourceOk returns a tuple with the SourceDatasource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloV00ReadOnly) GetSourceDatasourceOk() (*SloV00DestinationDatasource, bool) {
	if o == nil || IsNil(o.SourceDatasource) {
		return nil, false
	}
	return o.SourceDatasource, true
}

// HasSourceDatasource returns a boolean if a field has been set.
func (o *SloV00ReadOnly) HasSourceDatasource() bool {
	if o != nil && !IsNil(o.SourceDatasource) {
		return true
	}

	return false
}

// SetSourceDatasource gets a reference to the given SloV00DestinationDatasource and assigns it to the SourceDatasource field.
func (o *SloV00ReadOnly) SetSourceDatasource(v SloV00DestinationDatasource) {
	o.SourceDatasource = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SloV00ReadOnly) GetStatus() SloV00Status {
	if o == nil || IsNil(o.Status) {
		var ret SloV00Status
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloV00ReadOnly) GetStatusOk() (*SloV00Status, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SloV00ReadOnly) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given SloV00Status and assigns it to the Status field.
func (o *SloV00ReadOnly) SetStatus(v SloV00Status) {
	o.Status = &v
}

func (o SloV00ReadOnly) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloV00ReadOnly) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedActions) {
		toSerialize["allowedActions"] = o.AllowedActions
	}
	if !IsNil(o.DrillDownDashboardRef) {
		toSerialize["drillDownDashboardRef"] = o.DrillDownDashboardRef
	}
	if !IsNil(o.Provenance) {
		toSerialize["provenance"] = o.Provenance
	}
	if !IsNil(o.SourceDatasource) {
		toSerialize["sourceDatasource"] = o.SourceDatasource
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableSloV00ReadOnly struct {
	value *SloV00ReadOnly
	isSet bool
}

func (v NullableSloV00ReadOnly) Get() *SloV00ReadOnly {
	return v.value
}

func (v *NullableSloV00ReadOnly) Set(val *SloV00ReadOnly) {
	v.value = val
	v.isSet = true
}

func (v NullableSloV00ReadOnly) IsSet() bool {
	return v.isSet
}

func (v *NullableSloV00ReadOnly) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloV00ReadOnly(val *SloV00ReadOnly) *NullableSloV00ReadOnly {
	return &NullableSloV00ReadOnly{value: val, isSet: true}
}

func (v NullableSloV00ReadOnly) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloV00ReadOnly) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
