/*
Grafana SLO API

This API CRUDs SLO objects for the Grafana plugin.  Modifying an SLO object will create or update recording and alerting rules in a connected Prometheus instance and create or update dashboards in Grafana.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
)

// checks if the SloV00GrafanaQueries type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloV00GrafanaQueries{}

// SloV00GrafanaQueries struct for SloV00GrafanaQueries
type SloV00GrafanaQueries struct {
	GrafanaQueries       []map[string]interface{} `json:"grafanaQueries"`
	AdditionalProperties map[string]interface{}
}

type _SloV00GrafanaQueries SloV00GrafanaQueries

// NewSloV00GrafanaQueries instantiates a new SloV00GrafanaQueries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloV00GrafanaQueries(grafanaQueries []map[string]interface{}) *SloV00GrafanaQueries {
	this := SloV00GrafanaQueries{}
	this.GrafanaQueries = grafanaQueries
	return &this
}

// NewSloV00GrafanaQueriesWithDefaults instantiates a new SloV00GrafanaQueries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloV00GrafanaQueriesWithDefaults() *SloV00GrafanaQueries {
	this := SloV00GrafanaQueries{}
	return &this
}

// GetGrafanaQueries returns the GrafanaQueries field value
func (o *SloV00GrafanaQueries) GetGrafanaQueries() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.GrafanaQueries
}

// GetGrafanaQueriesOk returns a tuple with the GrafanaQueries field value
// and a boolean to check if the value has been set.
func (o *SloV00GrafanaQueries) GetGrafanaQueriesOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrafanaQueries, true
}

// SetGrafanaQueries sets field value
func (o *SloV00GrafanaQueries) SetGrafanaQueries(v []map[string]interface{}) {
	o.GrafanaQueries = v
}

func (o SloV00GrafanaQueries) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloV00GrafanaQueries) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["grafanaQueries"] = o.GrafanaQueries

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SloV00GrafanaQueries) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	varSloV00GrafanaQueries := _SloV00GrafanaQueries{}

	err = json.Unmarshal(data, &varSloV00GrafanaQueries)

	if err != nil {
		return err
	}

	*o = SloV00GrafanaQueries(varSloV00GrafanaQueries)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "grafanaQueries")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSloV00GrafanaQueries struct {
	value *SloV00GrafanaQueries
	isSet bool
}

func (v NullableSloV00GrafanaQueries) Get() *SloV00GrafanaQueries {
	return v.value
}

func (v *NullableSloV00GrafanaQueries) Set(val *SloV00GrafanaQueries) {
	v.value = val
	v.isSet = true
}

func (v NullableSloV00GrafanaQueries) IsSet() bool {
	return v.isSet
}

func (v *NullableSloV00GrafanaQueries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloV00GrafanaQueries(val *SloV00GrafanaQueries) *NullableSloV00GrafanaQueries {
	return &NullableSloV00GrafanaQueries{value: val, isSet: true}
}

func (v NullableSloV00GrafanaQueries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloV00GrafanaQueries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
