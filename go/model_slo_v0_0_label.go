/*
Grafana SLO API

This API CRUDs SLO objects for the Grafana plugin.  Modifying an SLO object will create or update recording and alerting rules in a connected Prometheus instance and create or update dashboards in Grafana.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SloV00Label type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloV00Label{}

// SloV00Label struct for SloV00Label
type SloV00Label struct {
	Key string `json:"key"`
	Value string `json:"value"`
}

type _SloV00Label SloV00Label

// NewSloV00Label instantiates a new SloV00Label object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloV00Label(key string, value string) *SloV00Label {
	this := SloV00Label{}
	this.Key = key
	this.Value = value
	return &this
}

// NewSloV00LabelWithDefaults instantiates a new SloV00Label object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloV00LabelWithDefaults() *SloV00Label {
	this := SloV00Label{}
	return &this
}

// GetKey returns the Key field value
func (o *SloV00Label) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *SloV00Label) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *SloV00Label) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *SloV00Label) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SloV00Label) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SloV00Label) SetValue(v string) {
	o.Value = v
}

func (o SloV00Label) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloV00Label) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *SloV00Label) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	varSloV00Label := _SloV00Label{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varSloV00Label)

	if err != nil {
		return err
	}

	*o = SloV00Label(varSloV00Label)

	return err
}

type NullableSloV00Label struct {
	value *SloV00Label
	isSet bool
}

func (v NullableSloV00Label) Get() *SloV00Label {
	return v.value
}

func (v *NullableSloV00Label) Set(val *SloV00Label) {
	v.value = val
	v.isSet = true
}

func (v NullableSloV00Label) IsSet() bool {
	return v.isSet
}

func (v *NullableSloV00Label) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloV00Label(val *SloV00Label) *NullableSloV00Label {
	return &NullableSloV00Label{value: val, isSet: true}
}

func (v NullableSloV00Label) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloV00Label) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


